#!/bin/sh
# Use emacs as a standalone info & man reader
# Reuben Thomas  31st July 2012

# FIXME:

# Options to implement in an info replacement:
#
#   -k, --apropos=STRING         look up STRING in all indices of all manuals.
#   -d, --directory=DIR          add DIR to INFOPATH.
#   -f, --file=FILENAME          specify Info file to visit.
#   -h, --help                   display this help and exit.
#       --index-search=STRING    go to node pointed by index entry STRING.
#   -n, --node=NODENAME          specify nodes in first visited Info file.
#   -o, --output=FILENAME        output selected nodes to FILENAME.
#   -O, --show-options, --usage  go to command-line options node.
#       --subnodes               recursively output menu items.
#       --vi-keys                use vi-like and less-like key bindings.
#       --version                display version information and exit.
#   -w, --where, --location      print physical location of Info file.

# Also allow options direct to Emacs

# Unsupported options:
#
#       --dribble=FILENAME       remember user keystrokes in FILENAME.
#       --restore=FILENAME       read initial keystrokes from FILENAME.
#       --no-raw-escapes         output escapes as literal text.
#   -R, --raw-escapes            output "raw" ANSI escapes (default).

# FIXME: Trapping the error from Emacs's man function requires a hack:
# unbind start-process to force man to be run synchronously, and hence
# allow the error to be trapped (otherwise, it is trapped by the
# process sentinel)
emacs -q --no-splash --eval "(progn (require 'man) (require 'info) (defun info-or-man (topic) (condition-case ierr (info topic) (error (unless (man topic) (user-error \"No info or manual entry for %s\" topic))))) (fmakunbound 'start-process) (define-key Man-mode-map \"q\" 'kill-emacs) (define-key Info-mode-map \"q\" 'kill-emacs) (setq Man-notify-method 'bully) (condition-case ierr (info-or-man \"$1\") (error (kill-emacs 1))))"
if [ $? -ne 0 ]; then
  echo "No such info or man page: $1"
fi
